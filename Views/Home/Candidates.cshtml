@model InnerMetrixWeb.ViewModels.CandidateViewModel

@{
    ViewBag.Title = "StartAssess";
    Layout = "~/Views/Shared/_LandingPage.cshtml";
}

<div class="row">
    <div class="col-lg-offset-1 col-lg-10">
        <ul class="nav nav-pills nav-justified">
            <li role="presentation" class="@(TempData["Culture"].Equals("ar") ? "active" : "")">@Html.ActionLink("عربي", "SetCulture", "Home", new { culture = "ar" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("de") ? "active" : "")">@Html.ActionLink("Deutsch", "SetCulture", "Home", new { culture = "de" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("en") ? "active" : "")">@Html.ActionLink("English", "SetCulture", "Home", new { culture = "en" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("es") ? "active" : "")">@Html.ActionLink("Español", "SetCulture", "Home", new { culture = "es" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("fr") ? "active" : "")">@Html.ActionLink("Français", "SetCulture", "Home", new { culture = "fr" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("he") ? "active" : "")">@Html.ActionLink("עברית", "SetCulture", "Home", new { culture = "he" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("hu") ? "active" : "")">@Html.ActionLink("Magyar", "SetCulture", "Home", new { culture = "hu" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("nl") ? "active" : "")">@Html.ActionLink("Nederlands", "SetCulture", "Home", new { culture = "nl" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("pt") ? "active" : "")">@Html.ActionLink("Português", "SetCulture", "Home", new { culture = "pt" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("ru") ? "active" : "")">@Html.ActionLink("Русский", "SetCulture", "Home", new { culture = "ru" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("sv") ? "active" : "")">@Html.ActionLink("Svenska", "SetCulture", "Home", new { culture = "sv" }, null)</li>
            <li role="presentation" class="@(TempData["Culture"].Equals("tr") ? "active" : "")">@Html.ActionLink("Türkçe", "SetCulture", "Home", new { culture = "tr" }, null)</li>
        </ul>
    </div>
</div>
<br />
<div class="row">
    <div class="col-lg-offset-3 col-lg-6 col-md-offset-2">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "John", @autocomplete = "off" } })
                        @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Doe", @autocomplete = "off" } })
                        @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "john.doe@alorica.com", @autocomplete = "off" } })
                        @*@Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                @Html.Hidden("Language", TempData["Culture"])
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Start" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
